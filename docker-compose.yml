version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: virtualsol-postgres
    environment:
      POSTGRES_DB: virtualsol
      POSTGRES_USER: virtualsol
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U virtualsol"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: virtualsol-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # VirtualSol Application (when using Dockerfile)
  # Uncomment to use with Docker instead of local development
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: virtualsol-app
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     NODE_ENV: production
  #     DATABASE_URL: postgresql://virtualsol:${DB_PASSWORD:-changeme}@postgres:5432/virtualsol
  #     REDIS_URL: redis://redis:6379
  #     JWT_SECRET: ${JWT_SECRET}
  #     HELIUS_API: ${HELIUS_API}
  #     # Add other required environment variables
  #   ports:
  #     - "3000:3000"  # Frontend
  #     - "4000:4000"  # Backend
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s

volumes:
  postgres_data:
  redis_data: